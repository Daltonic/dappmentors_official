name: Deployment to Ubuntu VPS

on:
  push:
    branches:
      - main

jobs:
  prepare_environment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Ensure target directory exists on VPS
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            if [ ! -d "/dockerized/containers/dapp_mentors_official" ]; then
              mkdir -p /dockerized/containers/dapp_mentors_official
            else
              rm -rf /dockerized/containers/dapp_mentors_official/*
            fi

      - name: Copy Github files to VPS
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: './'
          target: '/dockerized/containers/dapp_mentors_official'

      - name: Create .env file
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cat << EOF > /dockerized/containers/dapp_mentors_official/.env
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}
            NODE_ENV=${{ secrets.NODE_ENV }}
            NEXT_PUBLIC_APP_URL=${{ secrets.NEXT_PUBLIC_APP_URL }}
            SMTP_HOST=${{ secrets.SMTP_HOST }}
            SMTP_PORT=${{ secrets.SMTP_PORT }}
            SMTP_USER=${{ secrets.SMTP_USER }}
            SMTP_PASS=${{ secrets.SMTP_PASS }}
            SMTP_FROM=${{ secrets.SMTP_FROM }}
            NEXT_PUBLIC_APP_URL=${{ secrets.NEXT_PUBLIC_APP_URL }}
            CLEAR_EXISTING=true
            NUM_ITEM=50
            PROCESSOR_KEY=${{ secrets.PROCESSOR_KEY }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }}
            BACKEND_DOMAIN=${{ secrets.BACKEND_DOMAIN }}
            PAYMENT_PROCESSOR_URL=${{ secrets.PAYMENT_PROCESSOR_URL }}
            EOF

  deploy_with_compose:
    needs: prepare_environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Rebuild and restart only updated services (Zero Downtime)
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /dockerized/containers/dapp_mentors_official
            # Build only the fullstack service, keep others running
            docker compose build fullstack
            docker compose up -d --no-deps fullstack

  clean_up_dangling_images:
    needs: deploy_with_compose
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Remove dangling Docker images
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker image prune -af
